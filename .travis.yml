language: rust
cache: cargo
matrix:
  include:
    # Stable channel.
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: stable
      env:
        - TARGET=x86_64-unknown-linux-musl
        - CC_x86_64_unknown_linux_musl=/usr/bin/musl-gcc
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-gnu
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: stable
      env:
        - TARGET=arm-unknown-linux-gnueabihf
        - CC_arm_unknown_linux_gnueabihf=/usr/bin/arm-linux-gnueabihf-gcc-4.8
        - CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc-4.8
    - os: linux
      rust: stable
      env:
        - TARGET=aarch64-unknown-linux-gnu
        - CC_aarch64-unknown-linux-gnu=/usr/bin/aarch64-linux-gnu-gcc-4.8
        - CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc-4.8
        
    # Minimum Rust supported channel.
    - os: linux
      rust: 1.26.0
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: 1.26.0
      env:
        - TARGET=x86_64-unknown-linux-musl
        - CC_x86_64_unknown_linux_musl=/usr/bin/musl-gcc
    - os: osx
      rust: 1.26.0
      env: TARGET=x86_64-apple-darwin

    # Code formatting check
    - os: linux
      rust: nightly
      # skip the global install step
      install:
        - cargo install --debug --force rustfmt-nightly
      script: cargo fmt -- --check

sudo: required

before_install:
  - ci/before_install.bash

env:
  global:
    # Default target on travis-ci.
    # Used as conditional check in the install stage
    - HOST=x86_64-unknown-linux-gnu
    # Used on the deployment script
    - PROJECT_NAME=bat

install:
  # prevent target re-add error from rustup
  - if [[ $TRAVIS_OS_NAME = linux && $HOST != $TARGET ]]; then rustup target add $TARGET; fi

script:
  - ci/script.bash

before_deploy:
  - bash ci/before_deploy.bash

deploy:
  provider: releases
  # NOTE updating the `api_key.secure`
  # - go to: https://github.com/settings/tokens/new
  # - generate new token using `public_repo` scope
  # - encrypt it using: `travis encrypt API_KEY_HERE`
  # - paste the output below
  api_key:
    secure: "r9uPugtJxXb62z2LOhmGc+o1Gk6+wDUaSixrS/GJRzju1uIs+ItgHqSJFHkPltDU+MEP5p9mK5kMx96HmAQfP7YQgtGYg9dlVxRvA6w+lkJ2HtpdtD2oCZIdkbGqnu+yxNSfiq1lSzaFxhGWOh8yupoAKMk5GHP1o5Ge+20m94qK8QHOjFnbN+MtdsrI4JuPPtZzQRYzJ6vOp+GhNfi12aUdbOz/lepPokvaPfO120yfJ03hAUPm3OmhOs0LL5YKhyrmXpH/gGQhhI5XC2L+dw1gWakYhh9eLDmNwMuZ8xRF+4WNqAVyaN1gjf9TATJQzmkKZy/9VyIWObmnxOjembzpmPCaRM76M02omFl2RxyXGBaCCXBzchdeFJ5pBIMl+UzEG/0VgDxyR0uUVvSNO2uNzoeW5S3M5bFaIXEnDfg3XkSHMv+4OHoJZFWZNFVrz+Gv4WhmJaqFlf5xfhXpIW7qayfIxHfwf5x5TP+8FhEBtym1qdO7wQiDdYJD0cDCmoW6gfKSSDeECiGPPbJ9JJiF+uP9I8WMZUJONk2e3nrSmIUw/FTsdRZYkjln/x2x8Te/FjmA9IfcsTlrLpJLH+hS5bAq873ERFgsH3RRi6s/LQplZkEnD3s9B+7gOod5RX2Py5+YbpHCfBwEm0T/Mpb+Pa8AzG+cGxblWssBa0s="
  # for uploading multiple files
  file_glob: true
  # NOTE explanation on each env variable
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
    - $PROJECT_NAME*.deb
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    # deploy only if we push a tag
    tags: true
    # deploy only on stable channel that has TARGET env variable sets
    condition: $TRAVIS_RUST_VERSION = stable && $TARGET != ""
    branch: new_deb_packages

notifications:
  email:
    on_success: never
